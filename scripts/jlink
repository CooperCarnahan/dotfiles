#!/bin/zsh

TargetChip=MIMXRT106FDVL6A

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
    -b | --bin)
        BINARY="$2"
        shift # past argument
        shift # past value
        ;;
    --default)
        DEFAULT=YES
        shift # past argument
        ;;
    *)                     # unknown option
        POSITIONAL+=("$1") # save it in an array for later
        shift              # past argument
        ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters


#Retrieves the binary from the given project folder or using the path to the binary specified
# function will attempt to 
getBinary() {
    if [[ ! -z $BINARY ]]; then

        # Update flash location based on name
        if [[ $BINARY == *"bootstrap"* ]]; then
            echo "Bootstrap detected. Updating flash location to 0x60000000"
            FLASH_LOCATION="0x60000000"
        elif [[ $BINARY == *"bootloader"* ]]; then
            echo "Bootloader detected. Updating flash location to 0x60040000"
            FLASH_LOCATION="0x60040000"
        else
            echo "Using default flash location of 0x60300000"
            FLASH_LOCATION="0x60300000"
        fi

        if [[ $BINARY =~ \.bin ]]; then
            echo "Binary supplied"
        elif [[ $BINARY =~ \.hex ]]; then
            echo "Hex supplied"
        elif [[ $BINARY =~ \.axf ]]; then
            echo "AXF supplied"
            /usr/local/mcuxpressoide/ide/tools/bin/arm-none-eabi-size "${BINARY}"
            /usr/local/mcuxpressoide/ide/tools/bin/arm-none-eabi-objcopy -v -O binary "${BINARY}" "${BINARY%%*.}.bin"
            BINARY="${BINARY%%*.}.bin"
        # if binary was not supplied, then we will check the current project for a binary
        else
            echo "Unknown filetype. Searching Debug Folder for Binary"
            CUR_DIR=$(pwd -P)
            PROJ_REGEX="/mnt/hdd/Users/CooperHDD/Documents/Code/MCUX/\w*/\w*"
            MCUX_PROJECT_PATH=$(grep -o -e $PROJ_REGEX <<<$CUR_DIR)
            MCUX_PROJECT_DEBUG=${MCUX_PROJECT_PATH}/Debug/
            echo "Project: ${MCUX_PROJECT_PATH}"
            BINARY=$(find ${MCUX_PROJECT_PATH} -iname "*.axf")
            BINARY=$(echo $BINARY | cut -d $'\n' -f 1)

            if [[ ! -z $BINARY ]]; then
                echo "Binary found: ${BINARY}"
                getBinary
            else
                echo "No binary found in current directory. Run \"build\" command first"
                exit 1
            fi
        fi
    fi
}

getBinary

tmpfile=$(mktemp)
echo "ExitOnError 1" >>$tmpfile
echo "r" >>$tmpfile
echo "h" >>$tmpfile
echo "exec EnableEraseAllFlashBanks" >>$tmpfile
if [[ ! -z $BINARY ]]; then
    echo "loadfile $BINARY $FLASH_LOCATION" >>$tmpfile
fi
/usr/bin/JLinkExe -device "$TargetChip" -if SWD -speed 15000 -AutoConnect 1 -CommanderScript $tmpfile
rm "$tmpfile"
