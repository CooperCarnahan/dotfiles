{"version":3,"file":"secondary-cmGQzR_M.js","sources":["../../src/secondary.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport * as zebar from 'zebar';\r\n\r\n// We only need the glazewm provider for workspaces\r\nconst providers = zebar.createProviderGroup({\r\n    glazewm: { type: 'glazewm' },\r\n});\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n\r\nfunction App() {\r\n    const [output, setOutput] = useState(providers.outputMap);\r\n\r\n    useEffect(() => {\r\n        // Listen for updates from the glazewm provider\r\n        providers.onOutput(() => setOutput(providers.outputMap));\r\n    }, []);\r\n\r\n    // debug (optional, can be removed)\r\n    console.log(output.glazewm);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"left\">\r\n                <div className=\"box\">\r\n                    <div className=\"logo\">\r\n                        {/* Static Windows icon as host data is no longer provided */}\r\n                        <i className=\"nf nf-custom-windows\"></i>\r\n                        {/* Hostname removed as host provider is no longer included\r\n                            You could hardcode a title here if desired, e.g., \"Workspaces\" */}\r\n                    </div>\r\n                    {output.glazewm && (\r\n                        <div className=\"workspaces\">\r\n                            {output.glazewm.currentWorkspaces.map(workspace => (\r\n                                <button\r\n                                    className={`workspace ${workspace.hasFocus ? 'focused' : ''} ${workspace.isDisplayed ? 'displayed' : ''}`}\r\n                                    onClick={() =>\r\n                                        output.glazewm.runCommand(\r\n                                            `focus --workspace ${workspace.name}`,\r\n                                        )\r\n                                    }\r\n                                    key={workspace.name}\r\n                                >\r\n                                    {workspace.displayName ?? workspace.name}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* The 'center' and 'right' divs are removed entirely */}\r\n            {/* If you have CSS that expects these, you might need to adjust your styling */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App; // Export App if it's imported elsewhere, otherwise it's just for createRoot\r\n"],"names":["providers","zebar.createProviderGroup","createRoot","jsx","App","output","setOutput","useState","useEffect","jsxs","workspace"],"mappings":"6DAKA,MAAMA,EAAYC,EAA0B,CACxC,QAAS,CAAE,KAAM,SAAU,CAC/B,CAAC,EAEDC,EAAW,SAAS,eAAe,MAAM,CAAC,EAAE,OAAOC,EAAA,IAACC,IAAI,CAAE,EAE1D,SAASA,GAAM,CACX,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAASP,EAAU,SAAS,EAExDQ,OAAAA,EAAAA,UAAU,IAAM,CAEZR,EAAU,SAAS,IAAMM,EAAUN,EAAU,SAAS,CAAC,CAC3D,EAAG,EAAE,EAGG,QAAA,IAAIK,EAAO,OAAO,EAGtBF,EAAAA,IAAC,MAAI,CAAA,UAAU,MACX,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACX,SAAAM,EAAA,KAAC,MAAI,CAAA,UAAU,MACX,SAAA,CAAAN,EAAAA,IAAC,OAAI,UAAU,OAEX,eAAC,IAAE,CAAA,UAAU,uBAAuB,CAGxC,CAAA,EACCE,EAAO,SACJF,EAAAA,IAAC,MAAI,CAAA,UAAU,aACV,SAAOE,EAAA,QAAQ,kBAAkB,IAC9BK,GAAAP,EAAA,IAAC,SAAA,CACG,UAAW,aAAaO,EAAU,SAAW,UAAY,EAAE,IAAIA,EAAU,YAAc,YAAc,EAAE,GACvG,QAAS,IACLL,EAAO,QAAQ,WACX,qBAAqBK,EAAU,IAAI,EACvC,EAIH,SAAAA,EAAU,aAAeA,EAAU,IAAA,EAF/BA,EAAU,IAAA,CAItB,CACL,CAAA,CAAA,CAER,CAAA,CACJ,CAAA,EAIJ,CAER"}